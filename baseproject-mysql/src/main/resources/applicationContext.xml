<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 扫描service -->
    <context:component-scan base-package="com.company.project.service.impl"></context:component-scan>

    <!-- 加载jdbc配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置sqlsessionfactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <props>
                            <!--页码<=0 查询第一页，页码>=总页数查询最后一页-->
                            <prop key="reasonable">true</prop>
                            <!--分页尺寸为0时查询所有纪录不再执行分页-->
                            <prop key="pageSizeZero">true</prop>
                            <!-- 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中， -->
                            <!-- 自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。 -->
                            <!-- 使用方法可以参考测试代码中的 com.github.pagehelper.test.basic 包下的 ArgumentsMapTest 和 ArgumentsObjTest -->
                            <prop key="supportMethodsArguments">true</prop>
                            <!-- 分页方言，mysql -->
                            <prop key="helperDialect">mysql</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 使用mybatis通用mapper插件代理mapper接口 -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--Mapper类路径-->
        <property name="basePackage" value="com.company.project.dao"/>
        <property name="properties">
            <value>
                <!-- 自定义通用mapper的完全限定名 -->
                mappers=com.company.project.core.Mapper
                <!--insert、update是否判断字符串类型!='' 即 test="str != null"表达式内是否追加 and str != ''-->
                notEmpty=true
                IDENTITY=mysql
            </value>
        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 开启注解事务，待测试事务是否有效 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 拦截器方式配置事物
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.company.project.service..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>
    -->

</beans>